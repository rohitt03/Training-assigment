// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VehicleManagment.Model;

namespace VehicleManagment.Migrations
{
    [DbContext(typeof(VehicleContext))]
    partial class VehicleContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VehicleManagment.Model.ServiceHistory", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("ServiceCost");

                    b.Property<DateTime>("ServiceDate");

                    b.Property<string>("ServiceType");

                    b.Property<int?>("VehiclesVehicleId");

                    b.HasKey("ServiceId");

                    b.HasIndex("VehiclesVehicleId");

                    b.ToTable("ServiceHistories");
                });

            modelBuilder.Entity("VehicleManagment.Model.Vehicle", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("BasePrice");

                    b.Property<string>("Brand");

                    b.Property<int>("Color");

                    b.Property<double>("Discount");

                    b.Property<int>("FuelType");

                    b.Property<bool>("IsAccidental");

                    b.Property<bool>("IsInSrvice");

                    b.Property<int>("LaunchYear");

                    b.Property<string>("Model");

                    b.Property<string>("Notes");

                    b.Property<string>("Number");

                    b.Property<string>("OwnerName");

                    b.Property<DateTime>("SellingDate");

                    b.Property<int>("TransmissionType");

                    b.Property<string>("VehicleType");

                    b.HasKey("VehicleId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("VehicleManagment.Model.ServiceHistory", b =>
                {
                    b.HasOne("VehicleManagment.Model.Vehicle", "Vehicles")
                        .WithMany("Histories")
                        .HasForeignKey("VehiclesVehicleId");
                });
#pragma warning restore 612, 618
        }
    }
}
